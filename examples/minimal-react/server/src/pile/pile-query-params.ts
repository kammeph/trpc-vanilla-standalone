import { z } from 'zod';
import { ForestOwnerPileStatusEnum, PileTaskTypeEnum } from './models';

export const pileQueryParams = z
  .object({
    projectIdList: z.array(z.string()).optional(),
    pileListIdList: z.array(z.string()).optional(),
    woodBuyerIdList: z.array(z.string()).optional(),
    forestOwnerIdList: z.array(z.string()).optional(),
    logisticStatusList: z.array(z.number()).optional(),
    logisticReadyStatusList: z.array(z.string()).optional(),
    excludedLogisticStatusList: z.array(z.number()).optional(),
    pileStatusList: z.array(z.number()).optional(),
    projectStatusList: z.array(z.number()).optional(),
    pileSaleTypeList: z.array(z.string()).optional(),
    pileDamageTypeList: z.array(z.string()).optional(),
    woodTypeIdList: z.array(z.number()).optional(),
    woodKindList: z.array(z.string()).optional(),
    woodQualityList: z.array(z.number()).optional(),
    diameterCmFrom: z.number().optional(),
    diameterCmTo: z.number().optional(),
    amountRmFrom: z.number().optional(),
    amountRmTo: z.number().optional(),
    salesAmountRmFrom: z.number().optional(),
    salesAmountRmTo: z.number().optional(),
    lengthMFrom: z.number().optional(),
    lengthMTo: z.number().optional(),
    actualWoodKind: z.number().optional(),
    actualWoodQuality: z.number().optional(),
    registrationDateFrom: z.number().optional(),
    registrationDateTo: z.number().optional(),
    registrationUserIds: z.array(z.string()).optional(),
    closingDateNull: z.boolean().optional(),
    closingDateFrom: z.number().optional(),
    closingDateTo: z.number().optional(),
    statusDateFrom: z.number().optional(),
    statusDateTo: z.number().optional(),
    stateList: z.array(z.string()).optional(),
    districtList: z.array(z.string()).optional(),
    nearestCity: z.string().optional(),
    searchText: z.string().optional(),
    matchPileNumber: z.boolean().optional(),
    intendedCustomerIdList: z.array(z.string()).optional(),
    fscPool: z.boolean().optional(),
    inventoryPerson: z.string().optional(),
    actualCustomerIdList: z.array(z.string()).optional(),
    transportOrderIdList: z.array(z.string()).optional(),
    pileDamagePercentageFrom: z.number().optional(),
    pileDamagePercentageTo: z.number().optional(),
    woodBuyingUnit: z.number().optional(),
    remainingAmountRmIsNull: z.boolean().optional(),
    remainingAmountRmFrom: z.number().optional(),
    remainingAmountRmTo: z.number().optional(),
    overUnderSizeFrom: z.number().optional(),
    overUnderSizeTo: z.number().optional(),
    contractIds: z.array(z.string()).optional(),
    certificateIds: z.array(z.string()).optional(),
    forestOwnerPileStatus: z
      .array(
        z.enum([
          ForestOwnerPileStatusEnum.Assigned,
          ForestOwnerPileStatusEnum.InPreparation,
          ForestOwnerPileStatusEnum.Invoice,
          ForestOwnerPileStatusEnum.Offered,
          ForestOwnerPileStatusEnum.Paid,
          ForestOwnerPileStatusEnum.Ready,
        ]),
      )
      .optional(),
    commentContent: z.string().optional(),
    commentCreatorIds: z.array(z.string()).optional(),
    commentCreatedDateFrom: z.number().optional(),
    commentCreatedDateTo: z.number().optional(),
    forestOwnerId: z.string().optional(),
    timberTradingPartnerId: z.string().optional(),
    timberTradingPartnerIdIsNotNull: z.boolean().optional(),
    intendedCustomerUnknown: z.boolean().optional(),
    measurementTypes: z.array(z.number()).optional(),
    logisticCompanyIds: z.array(z.string()).optional(),
    withoutInvoice: z.boolean().optional(),
    logisticStatusDateFrom: z.number().optional(),
    logisticStatusDateTo: z.number().optional(),
    logisticStatusUserIds: z.array(z.string()).optional(),
    parcel: z.string().optional(),
    forestDepartment: z.string().optional(),
    recipientPartnerId: z.string().optional(),
    forestServiceContracts: z.array(z.string()).optional(),
    taskCertificateIds: z.array(z.string()).optional(),
    taskType: z
      .enum([
        PileTaskTypeEnum.BACKING,
        PileTaskTypeEnum.HARVESTER,
        PileTaskTypeEnum.PROCESSING,
        PileTaskTypeEnum.STAKING,
      ])
      .optional(),
    technique: z.string().optional(),
    forestServiceProviderIds: z.array(z.string()).optional(),
    noDamage: z.boolean().optional(),
    transportOrderDestinationIds: z.array(z.string()).optional(),
    nonCertifiedWood: z.boolean().optional(),
    timberTradeAndForestServiceContractIds: z.array(z.string()).optional(),
    contractMeasurementTypes: z.array(z.string()).optional(),
    forestMeasurementTypes: z.array(z.string()).optional(),
    noPileNumber: z.boolean().optional(),
    noWoodBuyer: z.boolean().optional(),

    serviceCostFrom: z.number().optional(),
    serviceCostTo: z.number().optional(),
    pageSize: z.number().optional(),
    pageNumber: z.number().optional(),
  })
  .optional();

export type PileQueryParams = z.infer<typeof pileQueryParams>;
